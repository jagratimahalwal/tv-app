{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/MovieCard/index.tsx","components/Row/index.tsx","components/HomePage/index.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","MovieCard","show","selectShow","Fragment","className","src","image","medium","alt","onClick","id","RowWrapper","props","title","children","HomePage","useState","listOfShow","setListOfShows","topTenShows","setTopTenShows","isError","setError","history","useHistory","useEffect","fetch","then","response","json","data","filter","rating","average","sort","a","b","catch","error","data-testid","Row","map","genres","includes"],"mappings":"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","file":"static/js/4.ea806986.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport { ShowObject } from \"../../models/showModel\";\n\ninterface showProp {\n  show: ShowObject;\n  selectShow: any;\n}\nconst MovieCard: React.FC<showProp> = ({ show, selectShow }) => {\n  return (\n    <React.Fragment>\n      <div className=\"mt-6 \">\n        <div className=\"h-64 max-h-64 w-48 cursor-pointer rounded border-1 border-white transition duration-500 transform hover:scale-110 hover:border-3\">\n          <img\n            className=\" max-h-60 object-cover\trounded border-1 border-white \"\n            src={show.image?.medium}\n            alt={show.name}\n            onClick={() => selectShow(show.id)}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\n\ninterface RowWrapperProps {\n  children: React.ReactNode;\n  className?: string;\n  title?: string;\n}\n\nconst RowWrapper: React.FC<RowWrapperProps> = (props) => {\n  return (\n    <div className=\"mt-10\">\n      <h1 className=\"font-semibold \">{props.title}</h1>\n      <div className=\"flex overflow-x-scroll overflow-y-hidden no-scrollbar\">\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default RowWrapper;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport MovieCard from \"../MovieCard\";\nimport RowWrapper from \"../Row\";\nimport { ShowObject } from \"../../models/showModel\";\n\nconst HomePage: React.FC<{}> = () => {\n  const [listOfShow, setListOfShows] = useState<ShowObject[]>();\n  const [topTenShows, setTopTenShows] = useState<ShowObject[]>();\n  const [isError, setError] = useState<boolean>(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(\"https://api.tvmaze.com/shows\")\n      .then((response) => response.json())\n      .then((data) => {\n        setListOfShows(data);\n        setTopTenShows(\n          data\n            .filter((show: ShowObject) => show.rating.average)\n            .sort((a: ShowObject, b: ShowObject) =>\n              a.rating.average > b.rating.average ? -1 : 1\n            )\n            .slice(0, 20)\n        );\n      })\n      .catch((error) => setError(true));\n  }, []);\n\n  const selectShow = (id: number): void => {\n    history.push(`/show/${id}`);\n  };\n\n  return (\n    <div className=\"mt-6 mx-6 p-4\">\n      {isError && (\n        <h2 data-testid=\"error\">Something went wtong. Please try again</h2>\n      )}\n      {!isError && (\n        <div data-testid=\"result\">\n          <RowWrapper title={\"Top rating\"}>\n            {topTenShows &&\n              topTenShows.map((show, i) => (\n                <MovieCard\n                  show={show}\n                  key={i}\n                  selectShow={(id: number) => selectShow(id)}\n                />\n              ))}\n          </RowWrapper>\n\n          <RowWrapper title={\"Science-Fiction\"}>\n            {listOfShow &&\n              listOfShow\n                .filter((show) => show.genres.includes(\"Science-Fiction\"))\n                .map((show, i) => (\n                  <MovieCard\n                    show={show}\n                    key={i}\n                    selectShow={(id: number) => selectShow(id)}\n                  />\n                ))}\n          </RowWrapper>\n\n          <RowWrapper title={\"Drama\"}>\n            {listOfShow &&\n              listOfShow\n                .filter((show) => show.genres.includes(\"Drama\"))\n                .map((show, i) => (\n                  <MovieCard\n                    show={show}\n                    key={i}\n                    selectShow={(id: number) => selectShow(id)}\n                  />\n                ))}\n          </RowWrapper>\n\n          <RowWrapper title={\"Thriller\"}>\n            {listOfShow &&\n              listOfShow\n                .filter((show) => show.genres.includes(\"Thriller\"))\n                .map((show, i) => (\n                  <MovieCard\n                    show={show}\n                    key={i}\n                    selectShow={(id: number) => selectShow(id)}\n                  />\n                ))}\n          </RowWrapper>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}